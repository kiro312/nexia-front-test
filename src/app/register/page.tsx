"use client";
import React, { useState, ChangeEvent, FormEvent } from "react";
import Head from "next/head";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import {
  faLock,
  faEye,
  faUser,
  faEyeSlash,
} from "@fortawesome/free-solid-svg-icons";
// import GoogleButton from "react-google-button";
import { useRouter } from "next/navigation";
import Link from "next/link";
import { RegisterData } from "@/types/auth";
import { register } from "@/services/auth/auth";
import Swal from "sweetalert2";

export default function Home() {
  const [passwordVisible, setPasswordVisible] = useState(false);
  const [confirmPassword, setConfirmPassword] = useState("");
  const [password, setPassword] = useState("");
  const [username, setUsername] = useState("");
  const [email, setEmail] = useState("");
  const [birthdate, setBirthdate] = useState("");
  const [gender, setGender] = useState("");
  const [nationality, setNationality] = useState("");
  const [parentPin, setParentPin] = useState("");

  const router = useRouter();

  const togglePasswordVisibility = () => {
    setPasswordVisible(!passwordVisible);
  };

  const validateForm = () => {
    // is empty
    if (username === "" || email === "" || birthdate === "") {
      Swal.fire({
        icon: "error",
        title: "Oops...",
        text: "Please fill in all the fields",
      });
      return false;
    }

    // password match
    if (password !== confirmPassword) {
      Swal.fire({
        icon: "error",
        title: "Oops...",
        text: "Passwords do not match",
      });
      return false;
    }
    return true;
  };

  const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    // validate form
    if (!validateForm()) return;

    const formattedBirthdate = new Date(birthdate).toISOString().split("T")[0];
    let genderValue = gender === "Male" ? false : true;
    //
    const result: RegisterData = {
      username: username,
      password: password,
      birthDate: formattedBirthdate,
      gender: genderValue,
      nationality: nationality,
      parentPin: parentPin,
      role: "USER",
    };

    const response = await register(result);
    if (response) {
      router.push("/login");
    } else {
      Swal.fire({
        icon: "error",
        title: "Oops...",
        text: "An error occurred, please try again",
      });
    }
  };
  // Add your logic here to submit the form data

  const handleParentPinChange = (e: ChangeEvent<HTMLInputElement>) => {
    setParentPin(e.target.value);
  };

  const handlePasswordChange = (e: ChangeEvent<HTMLInputElement>) => {
    setPassword(e.target.value);
  };

  const handleConfirmPasswordChange = (e: ChangeEvent<HTMLInputElement>) => {
    setConfirmPassword(e.target.value);
  };

  const handleUsernameChange = (e: ChangeEvent<HTMLInputElement>) => {
    setUsername(e.target.value);
  };

  const handleEmailChange = (e: ChangeEvent<HTMLInputElement>) => {
    setEmail(e.target.value);
  };

  const handleBirthdateChange = (e: ChangeEvent<HTMLInputElement>) => {
    setBirthdate(e.target.value);
  };

  const handleGenderChange = (e: ChangeEvent<HTMLSelectElement>) => {
    setGender(e.target.value);
  };

  const handleNationalityChange = (e: ChangeEvent<HTMLInputElement>) => {
    setNationality(e.target.value);
  };

  return (
    <div className="flex flex-col items-center justify-center min-h-screen xl:py-2 ">
      <Head>
        <title>Nexia Tutor registration Page</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex flex-col items-center justify-center w-full flex-1 xl:px-20 text-center">
        {/* Sign up section */}
        <div className="bg-white rounded-2xl shadow-2xl md:flex xl:w-2/3 max-w-4xl">
          <div className="xl:w-3/5 p-5 md:shrink-0">
            <div className="font-bold text-[#2A304D] text-center sm:text-left">
              <span>Logo</span>
            </div>
            <div className="py-10 text-[#2A304D]">
              <h2 className="text-3xl font-bold mb-2">Sign Up</h2>
              <div className="border-2 w-10 border-[#2A304D] inline-block mb-2"></div>
              <form onSubmit={handleSubmit}>
                <div className="flex flex-col items-center">
                  <div className="bg-gray-100 flex items-center w-64 p-2 mb-3 relative">
                    <FontAwesomeIcon
                      icon={faUser}
                      className="text-gray-400 m-2"
                    />
                    <input
                      type="name"
                      name="text"
                      placeholder="username"
                      className="text-sm bg-gray-100 outline-none flex-1"
                      value={username}
                      onChange={handleUsernameChange}
                    />
                  </div>
                  <div className="bg-gray-100 flex items-center w-64 p-2 mb-3 relative">
                    <FontAwesomeIcon
                      icon={faUser}
                      className="text-gray-400 m-2"
                    />
                    <input
                      type="email"
                      name="email"
                      placeholder="Email"
                      className="text-sm bg-gray-100 outline-none flex-1"
                      value={email}
                      onChange={handleEmailChange}
                    />
                  </div>
                  <div className="bg-gray-100 flex items-center w-64 p-2 mb-3 relative">
                    <FontAwesomeIcon
                      icon={faUser}
                      className="text-gray-400 m-2"
                    />
                    <input
                      type="date"
                      name="birthdate"
                      placeholder="Birthdate"
                      className="text-sm bg-gray-100 outline-none flex-1"
                      value={birthdate}
                      onChange={handleBirthdateChange}
                    />
                  </div>
                  <div className="bg-gray-100 flex items-center w-64 p-2 mb-3 relative">
                    <FontAwesomeIcon
                      icon={faUser}
                      className="text-gray-400 m-2"
                    />
                    <select
                      name="gender"
                      className="text-sm bg-gray-100 outline-none flex-1"
                      value={gender}
                      onChange={handleGenderChange}
                    >
                      <option value="">Select Gender</option>
                      <option value="female">Female</option>
                      <option value="male">Male</option>
                    </select>
                  </div>
                  <div className="bg-gray-100 flex items-center w-64 p-2 mb-3 relative">
                    <FontAwesomeIcon
                      icon={faUser}
                      className="text-gray-400 m-2"
                    />
                    <input
                      type="text"
                      name="nationality"
                      placeholder="Nationality"
                      className="text-sm bg-gray-100 outline-none flex-1"
                      value={nationality}
                      onChange={handleNationalityChange}
                    />
                  </div>
                  <div className="bg-gray-100 flex items-center w-64 p-2 mb-3 relative">
                    <FontAwesomeIcon
                      icon={faLock}
                      className="text-gray-400 m-2"
                    />
                    <input
                      type={passwordVisible ? "number" : "password"}
                      name="parentPin"
                      placeholder="Parent Pin"
                      value={parentPin}
                      onChange={handleParentPinChange}
                      className="text-sm bg-gray-100 outline-none flex-1"
                      maxLength={4}
                    />
                    <div
                      className="absolute right-2 top-1/2 transform -translate-y-1/2 text-gray-400 cursor-pointer"
                      onClick={togglePasswordVisibility}
                    >
                      {!passwordVisible ? (
                        <FontAwesomeIcon icon={faEyeSlash} />
                      ) : (
                        <FontAwesomeIcon icon={faEye} />
                      )}
                    </div>
                  </div>

                  <div className="bg-gray-100 flex items-center w-64 p-2 mb-3 relative">
                    <FontAwesomeIcon
                      icon={faLock}
                      className="text-gray-400 m-2"
                    />
                    <input
                      type={passwordVisible ? "text" : "password"}
                      name="password"
                      placeholder="Password"
                      value={password}
                      onChange={handlePasswordChange}
                      className="text-sm bg-gray-100 outline-none flex-1"
                    />
                    <div
                      className="absolute right-2 top-1/2 transform -translate-y-1/2 text-gray-400 cursor-pointer"
                      onClick={togglePasswordVisibility}
                    >
                      {!passwordVisible ? (
                        <FontAwesomeIcon icon={faEyeSlash} />
                      ) : (
                        <FontAwesomeIcon icon={faEye} />
                      )}
                    </div>
                  </div>

                  <div className="bg-gray-100 flex items-center w-64 p-2 mb-3 relative">
                    <FontAwesomeIcon
                      icon={faLock}
                      className="text-gray-400 m-2"
                    />
                    <input
                      type={passwordVisible ? "text" : "password"}
                      name="confirm password"
                      placeholder="Confirm Password"
                      value={confirmPassword}
                      onChange={handleConfirmPasswordChange}
                      className="text-sm bg-gray-100 outline-none flex-1"
                    />
                    <div
                      className="absolute right-2 top-1/2 transform -translate-y-1/2 text-gray-400 cursor-pointer"
                      onClick={togglePasswordVisibility}
                    >
                      {!passwordVisible ? (
                        <FontAwesomeIcon icon={faEyeSlash} />
                      ) : (
                        <FontAwesomeIcon icon={faEye} />
                      )}
                    </div>
                  </div>

                  <button
                    type="submit"
                    className="border-2 border-[#2A304D] rounded-full px-12 py-2 inline-block font-semibold hover:bg-[#2A304D] hover:text-gray-100"
                  >
                    Sign Up
                  </button>
                  {/* <div className="mt-3 flex items-center text-[#2A304D]">
                    <span className="mr-1">or sign up using Google</span>
                    <FontAwesomeIcon icon={faGoogle} />
                  </div> */}

                  {/* <div className="mt-3 flex items-center text-[#2A304D]"> */}
                  {/* Container for Google button */}
                  {/* <div className="google-button-container flex justify-center w-full"> */}
                  {/* <GoogleButton
                        type="dark" // can be light or dark
                        onClick={() => {
                          console.log("Google button clicked");
                        }}
                      /> */}
                  {/* </div> */}
                  {/* </div> */}
                </div>
              </form>
            </div>
          </div>
          {/* sign up section */}
          <div className="xl:w-2/5 bg-[#2A304D] text-gray-100 rounded-tr-2xl rounded-br-2xl py-36 px-12">
            <h2 className="text-[#CDEBC5] text-3xl font-bold mb-2">
              Already have an account?
            </h2>
            <div className="border-2 w-10 border-white inline-block mb-2"></div>
            <p className="mb-2">If you already have an account, sign in Now</p>
            <Link
              href="/Login"
              className="border-2 border-white rounded-full px-12 py-2 inline-block font-semibold hover:bg-gray-100 hover:text-[#2A304D]"
            >
              Sign In
            </Link>
          </div>
        </div>
      </main>
    </div>
  );
}
